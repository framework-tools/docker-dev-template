import { c as create_ssr_component, a as add_attribute, e as escape, b as each, v as validate_component, m as missing_component } from './server-entry-148b7ec8.js';

/* node_modules\svelte-material-icons\Plus.svelte generated by Svelte v3.25.1 */

const Plus = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\Plus.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* app\components\kanban\Card.svelte generated by Svelte v3.25.1 */

const css = {
	code: ".title.svelte-17luogu{font-weight:500;outline:0}.card.svelte-17luogu{cursor:pointer;padding:8px;margin:2px 0;border:1px solid rgba(0,0,0,0.05);background:white;border-radius:4px;box-shadow:0 2px 8px -2px rgba(0,0,0,0.1);font-size:14px}",
	map: "{\"version\":3,\"file\":\"Card.svelte\",\"sources\":[\"Card.svelte\"],\"sourcesContent\":[\"<script>\\r\\nimport { tick } from 'svelte'\\r\\nexport let item\\r\\nlet editing = false\\r\\nlet title\\r\\n\\r\\nfunction updateItem (event) {\\r\\n    item.name = event.target.textContent\\r\\n}\\r\\n\\r\\nfunction setEndOfContenteditable (el) {\\r\\n    if (document.createRange) {\\r\\n        let range = document.createRange()//Create a range (a range is a like the selection but invisible)\\r\\n        range.selectNodeContents(el)//Select the entire contents of the element with the range\\r\\n        range.collapse(false)//collapse the range to the end point. false means collapse to end rather than the start\\r\\n        let selection = window.getSelection()//get the selection object (allows you to change selection)\\r\\n        selection.removeAllRanges()//remove any selections already made\\r\\n        selection.addRange(range)//make the range you have just created the visible selection\\r\\n    }\\r\\n}\\r\\n\\r\\n</script>\\r\\n<div\\r\\n\\tclass=\\\"card\\\"\\r\\n\\tdraggable=\\\"true\\\"\\r\\n\\ton:click={async () => {\\r\\n\\t\\tif(editing === true) {\\r\\n\\t\\t\\treturn\\r\\n\\t\\t}\\r\\n\\t\\tediting = true\\r\\n\\t\\ttitle.focus()\\r\\n\\t\\tawait tick()\\r\\n\\t\\tsetEndOfContenteditable(title)\\r\\n\\t}}\\r\\n\\ton:dragstart={e => e.dataTransfer.setData('text/plain', item.id)}>\\r\\n\\t<span\\r\\n\\t\\tclass=\\\"title\\\"\\r\\n\\t\\tbind:this={title}\\r\\n\\t\\tcontenteditable={ editing }\\r\\n\\t\\ton:input={updateItem}\\r\\n\\t\\ton:blur={() => editing = false }>\\r\\n\\t\\t{item.name}\\r\\n\\t</span>\\r\\n</div>\\r\\n<style>\\r\\n\\t\\r\\n\\t.title {\\r\\n\\t\\tfont-weight: 500;\\r\\n\\t\\toutline: 0;\\r\\n\\t}\\r\\n\\t.card {\\r\\n\\t\\tcursor: pointer;\\r\\n\\t\\tpadding: 8px;\\r\\n\\t\\tmargin: 2px 0;\\r\\n\\t\\tborder: 1px solid rgba(0,0,0,0.05);\\r\\n\\t\\tbackground: white;\\r\\n\\t\\tborder-radius: 4px;\\r\\n\\t\\tbox-shadow: 0 2px 8px -2px rgba(0,0,0,0.1);\\r\\n\\t\\tfont-size: 14px;\\r\\n\\t}\\r\\n</style>\"],\"names\":[],\"mappings\":\"AA8CC,MAAM,eAAC,CAAC,AACP,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,CAAC,AACX,CAAC,AACD,KAAK,eAAC,CAAC,AACN,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAClC,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC1C,SAAS,CAAE,IAAI,AAChB,CAAC\"}"
};

const Card = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { item } = $$props;
	let editing = false;
	let title;

	if ($$props.item === void 0 && $$bindings.item && item !== void 0) $$bindings.item(item);
	$$result.css.add(css);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\components\\kanban\\Card.svelte");

	return `<div class="${"card svelte-17luogu"}" draggable="${"true"}"><span class="${"title svelte-17luogu"}"${add_attribute("contenteditable", editing, 0)}${add_attribute("this", title, 1)}>${escape(item.name)}</span>
</div>`;
});

/* app\components\kanban\Group.svelte generated by Svelte v3.25.1 */

const css$1 = {
	code: ".group.svelte-1hdkq5y{padding:5px;flex:1 1 0}.label.svelte-1hdkq5y{padding:2px 4px;border-radius:4px;font-weight:500;display:inline-block;background:rgba(0,0,0,0.5)}.items.svelte-1hdkq5y{padding:10px 0;display:grid}.add-item.svelte-1hdkq5y{margin:2px 0;cursor:pointer;padding:10px;border-radius:4px;color:rgba(0,0,0,0.2);font-weight:500;display:grid;grid-template-columns:min-content;grid-gap:5px;grid-auto-flow:column;align-items:center}.add-item.svelte-1hdkq5y:hover{background:rgba(0,0,0,0.05)}",
	map: "{\"version\":3,\"file\":\"Group.svelte\",\"sources\":[\"Group.svelte\"],\"sourcesContent\":[\"<script>\\r\\nimport Plus from 'icons/Plus'\\r\\nimport Card from '@/components/kanban/Card'\\r\\nexport let group = []\\r\\nexport let items = []\\r\\nexport let boardItems = []\\r\\nexport let swimlane\\r\\nexport let lane\\r\\n$: groupItems = boardItems.filter(item => item.status == group.name)\\r\\n\\r\\nfunction onDrop (e) {\\r\\n\\tlet id = e.dataTransfer.getData('text')\\r\\n\\tlet item = items.find(item => item.id == Number(id))\\r\\n\\titem.status = group.name\\r\\n\\titem[swimlane] = lane\\r\\n\\titems = items\\r\\n}\\r\\n\\t\\r\\nfunction addItem (group) {\\r\\n\\titems = [\\r\\n\\t\\t...items,\\r\\n\\t\\t{\\r\\n\\t\\t\\tid: items.length,\\r\\n\\t\\t\\tstatus: group.name,\\r\\n\\t\\t\\tname: `Task ${items.length + 1}`,\\r\\n\\t\\t\\t[swimlane]: lane\\r\\n\\t\\t}\\r\\n\\t]\\r\\n}\\r\\n</script>\\r\\n<div \\r\\n\\tclass=\\\"group\\\"\\r\\n\\ton:drop={e => onDrop(e)} \\r\\n\\tondragover=\\\"return false\\\">\\r\\n\\t<span class=\\\"label\\\" style=\\\"background: {group.color}\\\">{ group.name }</span>\\r\\n\\t<div class=\\\"items\\\">\\r\\n\\t\\t{#each groupItems as item }\\r\\n\\t\\t\\t<Card bind:item={item}/>\\r\\n\\t\\t{/each}\\r\\n\\t\\t<div class=\\\"add-item\\\" on:click={addItem(group)}>\\r\\n\\t\\t\\t<Plus/> Add item\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<style lang=\\\"stylus\\\">.group {\\n  padding: 5px;\\n  flex: 1 1 0;\\n}\\n.label {\\n  padding: 2px 4px;\\n  border-radius: 4px;\\n  font-weight: 500;\\n  display: inline-block;\\n  background: rgba(0,0,0,0.5);\\n}\\n.items {\\n  padding: 10px 0;\\n  display: grid;\\n}\\n.add-item {\\n  margin: 2px 0;\\n  cursor: pointer;\\n  padding: 10px;\\n  border-radius: 4px;\\n  color: rgba(0,0,0,0.2);\\n  font-weight: 500;\\n  display: grid;\\n  grid-template-columns: min-content;\\n  grid-gap: 5px;\\n  grid-auto-flow: column;\\n  align-items: center;\\n}\\n.add-item:hover {\\n  background: rgba(0,0,0,0.05);\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AA4CqB,MAAM,eAAC,CAAC,AAC3B,OAAO,CAAE,GAAG,CACZ,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AACb,CAAC,AACD,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC7B,CAAC,AACD,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,OAAO,CAAE,IAAI,AACf,CAAC,AACD,SAAS,eAAC,CAAC,AACT,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACtB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,WAAW,CAClC,QAAQ,CAAE,GAAG,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,wBAAS,MAAM,AAAC,CAAC,AACf,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AAC9B,CAAC\"}"
};

const Group = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { group = [] } = $$props;
	let { items = [] } = $$props;
	let { boardItems = [] } = $$props;
	let { swimlane } = $$props;
	let { lane } = $$props;

	if ($$props.group === void 0 && $$bindings.group && group !== void 0) $$bindings.group(group);
	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
	if ($$props.boardItems === void 0 && $$bindings.boardItems && boardItems !== void 0) $$bindings.boardItems(boardItems);
	if ($$props.swimlane === void 0 && $$bindings.swimlane && swimlane !== void 0) $$bindings.swimlane(swimlane);
	if ($$props.lane === void 0 && $$bindings.lane && lane !== void 0) $$bindings.lane(lane);
	$$result.css.add(css$1);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\components\\kanban\\Group.svelte");
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		let groupItems;
		groupItems = boardItems.filter(item => item.status == group.name);

		$$rendered = `<div class="${"group svelte-1hdkq5y"}" ondragover="${"return false"}"><span class="${"label svelte-1hdkq5y"}" style="${"background: " + escape(group.color)}">${escape(group.name)}</span>
	<div class="${"items svelte-1hdkq5y"}">${each(groupItems, item => `${validate_component(Card, "Card").$$render(
			$$result,
			{ item },
			{
				item: $$value => {
					item = $$value;
					$$settled = false;
				}
			},
			{}
		)}`)}
		<div class="${"add-item svelte-1hdkq5y"}">${validate_component(Plus, "Plus").$$render($$result, {}, {}, {})} Add item
		</div></div>
</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* app\components\kanban\Board.svelte generated by Svelte v3.25.1 */

const css$2 = {
	code: ".board.svelte-mrvdkp{display:flex;padding-top:5px;font-size:14px}",
	map: "{\"version\":3,\"file\":\"Board.svelte\",\"sources\":[\"Board.svelte\"],\"sourcesContent\":[\"<script>\\r\\nimport Group from '@/components/kanban/Group'\\r\\n\\r\\nexport let groups\\r\\nexport let items\\r\\nexport let boardItems\\r\\nexport let swimlane\\r\\nexport let lane\\r\\n\\r\\n$: groupsArray = Object.entries(groups).map(([key, value]) => ({...value, name: key}))\\r\\n\\r\\n</script>\\r\\n<div class=\\\"board\\\">\\r\\n\\t{#each [...groupsArray] as group}\\r\\n\\t\\t<Group\\r\\n\\t\\t\\tbind:boardItems={boardItems}\\r\\n\\t\\t\\tbind:group={group}\\r\\n\\t\\t\\tbind:items={items}\\r\\n\\t\\t\\tbind:swimlane={swimlane}\\r\\n\\t\\t\\tbind:lane={lane}/>\\r\\n\\t{/each}\\r\\n</div>\\r\\n<style lang=\\\"stylus\\\">.board {\\n  display: flex;\\n  padding-top: 5px;\\n  font-size: 14px;\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AAsBqB,MAAM,cAAC,CAAC,AAC3B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,AACjB,CAAC\"}"
};

const Board = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { groups } = $$props;
	let { items } = $$props;
	let { boardItems } = $$props;
	let { swimlane } = $$props;
	let { lane } = $$props;
	if ($$props.groups === void 0 && $$bindings.groups && groups !== void 0) $$bindings.groups(groups);
	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
	if ($$props.boardItems === void 0 && $$bindings.boardItems && boardItems !== void 0) $$bindings.boardItems(boardItems);
	if ($$props.swimlane === void 0 && $$bindings.swimlane && swimlane !== void 0) $$bindings.swimlane(swimlane);
	if ($$props.lane === void 0 && $$bindings.lane && lane !== void 0) $$bindings.lane(lane);
	$$result.css.add(css$2);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\components\\kanban\\Board.svelte");
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		let groupsArray;
		groupsArray = Object.entries(groups).map(([key, value]) => ({ ...value, name: key }));

		$$rendered = `<div class="${"board svelte-mrvdkp"}">${each([...groupsArray], group => `${validate_component(Group, "Group").$$render(
			$$result,
			{ boardItems, group, items, swimlane, lane },
			{
				boardItems: $$value => {
					boardItems = $$value;
					$$settled = false;
				},
				group: $$value => {
					group = $$value;
					$$settled = false;
				},
				items: $$value => {
					items = $$value;
					$$settled = false;
				},
				swimlane: $$value => {
					swimlane = $$value;
					$$settled = false;
				},
				lane: $$value => {
					lane = $$value;
					$$settled = false;
				}
			},
			{}
		)}`)}
</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* node_modules\svelte-material-icons\MenuRight.svelte generated by Svelte v3.25.1 */

const MenuRight = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\MenuRight.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M10,17L15,12L10,7V17Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules\svelte-material-icons\BookOpenPageVariant.svelte generated by Svelte v3.25.1 */

const BookOpenPageVariant = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\BookOpenPageVariant.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M19,2L14,6.5V17.5L19,13V2M6.5,5C4.55,5 2.45,5.4 1,6.5V21.16C1,21.41 1.25,21.66 1.5,21.66C1.6,21.66 1.65,21.59 1.75,21.59C3.1,20.94 5.05,20.5 6.5,20.5C8.45,20.5 10.55,20.9 12,22C13.35,21.15 15.8,20.5 17.5,20.5C19.15,20.5 20.85,20.81 22.25,21.56C22.35,21.61 22.4,21.59 22.5,21.59C22.75,21.59 23,21.34 23,21.09V6.5C22.4,6.05 21.75,5.75 21,5.5V7.5L21,13V19C19.9,18.65 18.7,18.5 17.5,18.5C15.8,18.5 13.35,19.15 12,20V13L12,8.5V6.5C10.55,5.4 8.45,5 6.5,5V5Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* app\components\Emoji.svelte generated by Svelte v3.25.1 */

const css$3 = {
	code: ".emoji.svelte-7r2vcy{display:inline-flex;width:1em;height:1em}",
	map: "{\"version\":3,\"file\":\"Emoji.svelte\",\"sources\":[\"Emoji.svelte\"],\"sourcesContent\":[\"<span class=\\\"emoji\\\">\\r\\n    {#if symbol}\\r\\n        {symbol}\\r\\n    {/if}\\r\\n    {#if component}\\r\\n        <svelte:component this={component}/>\\r\\n    {/if}\\r\\n</span>\\r\\n<script>\\r\\nexport let symbol = undefined\\r\\nexport let component = undefined\\r\\n</script>\\r\\n<style lang=\\\"stylus\\\">.emoji {\\n  display: inline-flex;\\n  width: 1em;\\n  height: 1em;\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AAYqB,MAAM,cAAC,CAAC,AAC3B,OAAO,CAAE,WAAW,CACpB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACb,CAAC\"}"
};

const Emoji = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { symbol = undefined } = $$props;
	let { component = undefined } = $$props;
	if ($$props.symbol === void 0 && $$bindings.symbol && symbol !== void 0) $$bindings.symbol(symbol);
	if ($$props.component === void 0 && $$bindings.component && component !== void 0) $$bindings.component(component);
	$$result.css.add(css$3);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\components\\Emoji.svelte");

	return `<span class="${"emoji svelte-7r2vcy"}">${symbol ? `${escape(symbol)}` : ``}
    ${component
	? `${validate_component(component || missing_component, "svelte:component").$$render($$result, {}, {}, {})}`
	: ``}
</span>`;
});

/* app\components\kanban\Swimlane.svelte generated by Svelte v3.25.1 */

const css$4 = {
	code: ".swimlane-group.svelte-1ry06s0.svelte-1ry06s0{margin-left:-30px;display:grid;grid-gap:5px;grid-template-columns:min-content min-content;grid-auto-flow:column;align-items:center;padding:8px;border-radius:5px;cursor:pointer}.swimlane-group.svelte-1ry06s0.svelte-1ry06s0:hover{background:rgba(38,48,59,0.05)}.swimlane-group.svelte-1ry06s0:hover .dropdown.svelte-1ry06s0{color:rgba(38,48,59,0.2)}.icon.svelte-1ry06s0.svelte-1ry06s0{color:#2d9cdb}.dropdown.svelte-1ry06s0.svelte-1ry06s0{font-size:24px;color:rgba(38,48,59,0.1);display:inline-flex}.dropdown.opened.svelte-1ry06s0.svelte-1ry06s0{transform:rotate(90deg)}.swimlane-name.svelte-1ry06s0.svelte-1ry06s0{font-weight:500}",
	map: "{\"version\":3,\"file\":\"Swimlane.svelte\",\"sources\":[\"Swimlane.svelte\"],\"sourcesContent\":[\"<script>\\r\\nimport Board from '@/components/kanban/Board'\\r\\nimport MenuRight from 'icons/MenuRight'\\r\\nimport Story from 'icons/BookOpenPageVariant'\\r\\nimport Emoji from '@/components/Emoji'\\r\\n\\r\\nexport let lane\\r\\nexport let items = []\\r\\nexport let groups = []\\r\\nexport let swimlane\\r\\n\\r\\nlet opened = false\\r\\n\\r\\n$: swimlaneItems = items.filter(item => item[swimlane] == lane)\\r\\n</script>\\r\\n<div class=\\\"swimlane\\\">\\r\\n    <div class=\\\"swimlane-group\\\" on:click={() => opened = !opened}>\\r\\n        <div class=\\\"dropdown\\\" class:opened={opened}>\\r\\n            <MenuRight/> \\r\\n        </div>\\r\\n        <div class=\\\"icon\\\">\\r\\n            <Emoji component={Story}/>\\r\\n        </div>\\r\\n        <span class=\\\"swimlane-name\\\">\\r\\n            { lane }\\r\\n        </span>\\r\\n    </div>\\r\\n    {#if opened}\\r\\n        <Board\\r\\n            bind:boardItems={swimlaneItems}\\r\\n            bind:items={items}\\r\\n            bind:groups={groups}\\r\\n            bind:swimlane={swimlane}\\r\\n            bind:lane={lane}/>\\r\\n    {/if}\\r\\n</div>\\r\\n<style lang=\\\"stylus\\\">.swimlane-group {\\n  margin-left: -30px;\\n  display: grid;\\n  grid-gap: 5px;\\n  grid-template-columns: min-content min-content;\\n  grid-auto-flow: column;\\n  align-items: center;\\n  padding: 8px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n.swimlane-group:hover {\\n  background: rgba(38,48,59,0.05);\\n}\\n.swimlane-group:hover .dropdown {\\n  color: rgba(38,48,59,0.2);\\n}\\n.icon {\\n  color: #2d9cdb;\\n}\\n.dropdown {\\n  font-size: 24px;\\n  color: rgba(38,48,59,0.1);\\n  display: inline-flex;\\n}\\n.dropdown.opened {\\n  transform: rotate(90deg);\\n}\\n.swimlane-name {\\n  font-weight: 500;\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AAoCqB,eAAe,8BAAC,CAAC,AACpC,WAAW,CAAE,KAAK,CAClB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,GAAG,CACb,qBAAqB,CAAE,WAAW,CAAC,WAAW,CAC9C,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,6CAAe,MAAM,AAAC,CAAC,AACrB,UAAU,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,AACjC,CAAC,AACD,8BAAe,MAAM,CAAC,SAAS,eAAC,CAAC,AAC/B,KAAK,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,AAC3B,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,SAAS,8BAAC,CAAC,AACT,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CACzB,OAAO,CAAE,WAAW,AACtB,CAAC,AACD,SAAS,OAAO,8BAAC,CAAC,AAChB,SAAS,CAAE,OAAO,KAAK,CAAC,AAC1B,CAAC,AACD,cAAc,8BAAC,CAAC,AACd,WAAW,CAAE,GAAG,AAClB,CAAC\"}"
};

const Swimlane = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { lane } = $$props;
	let { items = [] } = $$props;
	let { groups = [] } = $$props;
	let { swimlane } = $$props;
	if ($$props.lane === void 0 && $$bindings.lane && lane !== void 0) $$bindings.lane(lane);
	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
	if ($$props.groups === void 0 && $$bindings.groups && groups !== void 0) $$bindings.groups(groups);
	if ($$props.swimlane === void 0 && $$bindings.swimlane && swimlane !== void 0) $$bindings.swimlane(swimlane);
	$$result.css.add(css$4);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\components\\kanban\\Swimlane.svelte");
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		let swimlaneItems;
		swimlaneItems = items.filter(item => item[swimlane] == lane);

		$$rendered = `<div class="${"swimlane"}"><div class="${"swimlane-group svelte-1ry06s0"}"><div class="${["dropdown svelte-1ry06s0",  ""].join(" ").trim()}">${validate_component(MenuRight, "MenuRight").$$render($$result, {}, {}, {})}</div>
        <div class="${"icon svelte-1ry06s0"}">${validate_component(Emoji, "Emoji").$$render($$result, { component: BookOpenPageVariant }, {}, {})}</div>
        <span class="${"swimlane-name svelte-1ry06s0"}">${escape(lane)}</span></div>
    ${ ``}
</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* app\components\kanban\Kanban.svelte generated by Svelte v3.25.1 */

const css$5 = {
	code: ".kanban.svelte-rrty43{display:flex;flex-direction:column;font-size:14px}",
	map: "{\"version\":3,\"file\":\"Kanban.svelte\",\"sources\":[\"Kanban.svelte\"],\"sourcesContent\":[\"<script>\\r\\nimport Board from '@/components/kanban/Board'\\r\\nimport Swimlane from '@/components/kanban/Swimlane'\\r\\n\\r\\nexport let groups = []\\r\\nexport let items = []\\r\\nexport let swimlane\\r\\n\\r\\n$: swimlanes = new Set(items.map(item => item[swimlane]).filter(item => item))\\r\\n\\r\\n</script>\\r\\n<div class=\\\"kanban\\\">\\r\\n    {#if !swimlane}\\r\\n        <Board bind:items={items} bind:groups={groups}/>\\r\\n    {/if}\\r\\n    {#if swimlane}\\r\\n        {#each [...swimlanes] as lane}\\r\\n            <Swimlane bind:items={items} bind:groups={groups} bind:lane={lane} bind:swimlane={swimlane}/>\\r\\n        {/each}\\r\\n    {/if}\\r\\n</div>\\r\\n<style lang=\\\"stylus\\\">.kanban {\\n  display: flex;\\n  flex-direction: column;\\n  font-size: 14px;\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AAqBqB,OAAO,cAAC,CAAC,AAC5B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,SAAS,CAAE,IAAI,AACjB,CAAC\"}"
};

const Kanban = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { groups = [] } = $$props;
	let { items = [] } = $$props;
	let { swimlane } = $$props;
	if ($$props.groups === void 0 && $$bindings.groups && groups !== void 0) $$bindings.groups(groups);
	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
	if ($$props.swimlane === void 0 && $$bindings.swimlane && swimlane !== void 0) $$bindings.swimlane(swimlane);
	$$result.css.add(css$5);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\components\\kanban\\Kanban.svelte");
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		let swimlanes;
		swimlanes = new Set(items.map(item => item[swimlane]).filter(item => item));

		$$rendered = `<div class="${"kanban svelte-rrty43"}">${!swimlane
		? `${validate_component(Board, "Board").$$render(
				$$result,
				{ items, groups },
				{
					items: $$value => {
						items = $$value;
						$$settled = false;
					},
					groups: $$value => {
						groups = $$value;
						$$settled = false;
					}
				},
				{}
			)}`
		: ``}
    ${swimlane
		? `${each([...swimlanes], lane => `${validate_component(Swimlane, "Swimlane").$$render(
				$$result,
				{ items, groups, lane, swimlane },
				{
					items: $$value => {
						items = $$value;
						$$settled = false;
					},
					groups: $$value => {
						groups = $$value;
						$$settled = false;
					},
					lane: $$value => {
						lane = $$value;
						$$settled = false;
					},
					swimlane: $$value => {
						swimlane = $$value;
						$$settled = false;
					}
				},
				{}
			)}`)}`
		: ``}
</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* node_modules\svelte-material-icons\At.svelte generated by Svelte v3.25.1 */

const At = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\At.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules\svelte-material-icons\Video.svelte generated by Svelte v3.25.1 */

const Video = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\Video.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M17,10.5V7A1,1 0 0,0 16,6H4A1,1 0 0,0 3,7V17A1,1 0 0,0 4,18H16A1,1 0 0,0 17,17V13.5L21,17.5V6.5L17,10.5Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules\svelte-material-icons\Magnify.svelte generated by Svelte v3.25.1 */

const Magnify = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\Magnify.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules\svelte-material-icons\Settings.svelte generated by Svelte v3.25.1 */

const Settings = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\Settings.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules\svelte-material-icons\Pulse.svelte generated by Svelte v3.25.1 */

const Pulse = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\Pulse.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M3,13H5.79L10.1,4.79L11.28,13.75L14.5,9.66L17.83,13H21V15H17L14.67,12.67L9.92,18.73L8.94,11.31L7,15H3V13Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules\svelte-material-icons\Calendar.svelte generated by Svelte v3.25.1 */

const Calendar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\Calendar.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H18V1M17,12H12V17H17V12Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules\svelte-material-icons\ChevronUp.svelte generated by Svelte v3.25.1 */

const ChevronUp = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\node_modules\\svelte-material-icons\\ChevronUp.svelte");
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* app\includes\Sidebar.svelte generated by Svelte v3.25.1 */

const css$6 = {
	code: ".sidebar.svelte-1r2sgux.svelte-1r2sgux{max-width:280px;width:100%;grid-area:1/1/span 2/span 1}.organisation.svelte-1r2sgux.svelte-1r2sgux{border-top:1px solid rgba(38,48,59,0.06);padding-bottom:10px}.organisation.svelte-1r2sgux .organisation-name-area.svelte-1r2sgux{padding:6px 10px;display:flex;align-items:center}.organisation.svelte-1r2sgux .organisation-name-area .dropdown.svelte-1r2sgux{display:inline-flex;margin-left:auto;padding:4px;border-radius:10px;color:rgba(38,48,59,0.2);cursor:pointer}.organisation.svelte-1r2sgux .organisation-name-area .dropdown.opened.svelte-1r2sgux{transform:rotate(180deg)}.organisation.svelte-1r2sgux .organisation-name-area .dropdown.svelte-1r2sgux:hover{background:rgba(38,48,59,0.05)}.organisation.svelte-1r2sgux .organisation-name-area .name.svelte-1r2sgux{font-size:14px;font-weight:600;margin:0}.organisation.svelte-1r2sgux .emoji.svelte-1r2sgux{font-size:18px;margin-right:3px;line-height:100%}.group.svelte-1r2sgux.svelte-1r2sgux{padding-bottom:8px}.group.svelte-1r2sgux .group-name-area.svelte-1r2sgux{padding:4px 10px;display:flex;align-items:center}.group.svelte-1r2sgux .group-name-area .name.svelte-1r2sgux{font-size:13px;text-transform:uppercase;font-weight:600;color:rgba(38,48,59,0.3)}.group.svelte-1r2sgux .page.svelte-1r2sgux{display:flex;padding:4px 15px;align-items:center;cursor:pointer}.group.svelte-1r2sgux .page .name.svelte-1r2sgux{font-size:14px;font-weight:500;color:rgba(38,48,59,0.7)}.group.svelte-1r2sgux .page.svelte-1r2sgux:hover{background:rgba(38,48,59,0.05)}.buttons.svelte-1r2sgux.svelte-1r2sgux{display:grid;grid-template-columns:1fr 1fr;padding:10px;grid-gap:5px}.buttons.svelte-1r2sgux .button.svelte-1r2sgux{padding:8px 10px;border-radius:5px;cursor:pointer;font-weight:500;display:grid;grid-template-columns:min-content 1fr;grid-gap:10px;color:rgba(38,48,59,0.5)}.buttons.svelte-1r2sgux .button .icon.svelte-1r2sgux{font-size:20px;display:inline-flex}.buttons.svelte-1r2sgux .button span.svelte-1r2sgux{font-size:14px;display:inline-flex;align-items:center}.buttons.svelte-1r2sgux .button.svelte-1r2sgux:hover{color:#26303b;background:rgba(38,48,59,0.04)}",
	map: "{\"version\":3,\"file\":\"Sidebar.svelte\",\"sources\":[\"Sidebar.svelte\"],\"sourcesContent\":[\"<div class=\\\"sidebar\\\">\\r\\n    <div class=\\\"buttons\\\">\\r\\n        {#each buttons as button}\\r\\n            <div class=\\\"button\\\">\\r\\n                <div class=\\\"icon\\\">\\r\\n                    <svelte:component this={button.icon}/>\\r\\n                </div>\\r\\n                <span>{ button.text }</span>\\r\\n            </div>\\r\\n        {/each}\\r\\n    </div>\\r\\n    {#each organisations as organisation}\\r\\n        <div class=\\\"organisation\\\">\\r\\n            <div class=\\\"organisation-name-area\\\">\\r\\n                <span class=\\\"emoji\\\">\\r\\n                    <Emoji symbol={organisation.emoji}/>\\r\\n                </span>\\r\\n                <span class=\\\"name\\\">{organisation.name}</span>\\r\\n                <span class=\\\"dropdown\\\" class:opened={organisation.opened} on:click={()=>toggleOpened(organisation)}>\\r\\n                    <ChevronUp/>\\r\\n                </span>\\r\\n            </div>\\r\\n            {#if organisation.opened}\\r\\n                {#each organisation.groups as group}\\r\\n                    <div class=\\\"group\\\">\\r\\n                        <div class=\\\"group-name-area\\\">\\r\\n                            <span class=\\\"name\\\">{group.name}</span>\\r\\n                        </div>\\r\\n                        {#each group.pages as page}\\r\\n                            <a href=\\\"{page.url}\\\" class=\\\"page\\\">\\r\\n                                <span class=\\\"emoji\\\">\\r\\n                                    <Emoji symbol={page.emoji}/>\\r\\n                                </span>\\r\\n                                <span class=\\\"name\\\">{page.name}</span>\\r\\n                            </a>\\r\\n                        {/each}\\r\\n                    </div>\\r\\n                {/each}\\r\\n            {/if}\\r\\n        </div>\\r\\n    {/each}\\r\\n</div>\\r\\n<style lang=\\\"stylus\\\">.sidebar {\\n  max-width: 280px;\\n  width: 100%;\\n  grid-area: 1/1/span 2/span 1;\\n}\\n.organisation {\\n  border-top: 1px solid rgba(38,48,59,0.06);\\n  padding-bottom: 10px;\\n}\\n.organisation .organisation-name-area {\\n  padding: 6px 10px;\\n  display: flex;\\n  align-items: center;\\n}\\n.organisation .organisation-name-area .dropdown {\\n  display: inline-flex;\\n  margin-left: auto;\\n  padding: 4px;\\n  border-radius: 10px;\\n  color: rgba(38,48,59,0.2);\\n  cursor: pointer;\\n}\\n.organisation .organisation-name-area .dropdown.opened {\\n  transform: rotate(180deg);\\n}\\n.organisation .organisation-name-area .dropdown:hover {\\n  background: rgba(38,48,59,0.05);\\n}\\n.organisation .organisation-name-area .name {\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n}\\n.organisation .emoji {\\n  font-size: 18px;\\n  margin-right: 3px;\\n  line-height: 100%;\\n}\\n.group {\\n  padding-bottom: 8px;\\n}\\n.group .group-name-area {\\n  padding: 4px 10px;\\n  display: flex;\\n  align-items: center;\\n}\\n.group .group-name-area .name {\\n  font-size: 13px;\\n  text-transform: uppercase;\\n  font-weight: 600;\\n  color: rgba(38,48,59,0.3);\\n}\\n.group .page {\\n  display: flex;\\n  padding: 4px 15px;\\n  align-items: center;\\n  cursor: pointer;\\n}\\n.group .page .name {\\n  font-size: 14px;\\n  font-weight: 500;\\n  color: rgba(38,48,59,0.7);\\n}\\n.group .page:hover {\\n  background: rgba(38,48,59,0.05);\\n}\\n.buttons {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  padding: 10px;\\n  grid-gap: 5px;\\n}\\n.buttons .button {\\n  padding: 8px 10px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  font-weight: 500;\\n  display: grid;\\n  grid-template-columns: min-content 1fr;\\n  grid-gap: 10px;\\n  color: rgba(38,48,59,0.5);\\n}\\n.buttons .button .icon {\\n  font-size: 20px;\\n  display: inline-flex;\\n}\\n.buttons .button span {\\n  font-size: 14px;\\n  display: inline-flex;\\n  align-items: center;\\n}\\n.buttons .button:hover {\\n  color: #26303b;\\n  background: rgba(38,48,59,0.04);\\n}\\n</style>\\r\\n<script>\\r\\nimport At from 'icons/At'\\r\\nimport Video from 'icons/Video'\\r\\nimport Magnify from 'icons/Magnify'\\r\\nimport Settings from 'icons/Settings'\\r\\nimport Pulse from 'icons/Pulse'\\r\\nimport Calendar from 'icons/Calendar'\\r\\n\\r\\nimport ChevronUp from 'icons/ChevronUp'\\r\\nimport Emoji from '@/components/Emoji'\\r\\n\\r\\nfunction toggleOpened (org) {\\r\\n    org.opened = !org.opened\\r\\n    organisations = organisations\\r\\n}\\r\\n\\r\\nlet buttons = [\\r\\n    {\\r\\n        text: 'Pings',\\r\\n        icon: At\\r\\n    },\\r\\n    {\\r\\n        text: 'Meet',\\r\\n        icon: Video\\r\\n    },\\r\\n    {\\r\\n        text: 'Search',\\r\\n        icon: Magnify\\r\\n    },\\r\\n    {\\r\\n        text: 'Settings',\\r\\n        icon: Settings\\r\\n    },\\r\\n    {\\r\\n        text: 'Activity',\\r\\n        icon: Pulse\\r\\n    },\\r\\n    {\\r\\n        text: 'Calendar',\\r\\n        icon: Calendar\\r\\n    },\\r\\n]\\r\\n\\r\\nlet organisations = [\\r\\n    {\\r\\n        name: 'Insane Marketing',\\r\\n        emoji: '🔭',\\r\\n        opened: true,\\r\\n        groups: [\\r\\n            {\\r\\n                name: 'workspace',\\r\\n                pages: [\\r\\n                    {\\r\\n                        name: 'OS',\\r\\n                        emoji: '🕹'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Tasks',\\r\\n                        emoji: '📚'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'General Chat',\\r\\n                        emoji: '💵'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Company Vision',\\r\\n                        emoji: '🚀'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Time Tracking',\\r\\n                        emoji: '⏱'\\r\\n                    }\\r\\n                ]\\r\\n            },\\r\\n            {\\r\\n                name: 'seo',\\r\\n                pages: [\\r\\n                    {\\r\\n                        name: 'Tasks',\\r\\n                        emoji: '📚'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Company Vision',\\r\\n                        emoji: '🔭'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Time Tracking',\\r\\n                        emoji: '📚'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Customers',\\r\\n                        emoji: '⏱'\\r\\n                    }\\r\\n                ]\\r\\n            },\\r\\n        ]\\r\\n    },\\r\\n    {\\r\\n        name: 'Vilicus Household',\\r\\n        emoji: '💵',\\r\\n        opened: false,\\r\\n        groups: [\\r\\n            {\\r\\n                name: 'workspace',\\r\\n                pages: [\\r\\n                    {\\r\\n                        name: 'OS',\\r\\n                        emoji: '🕹'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Tasks',\\r\\n                        emoji: '📚'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'General Chat',\\r\\n                        emoji: '💵'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Company Vision',\\r\\n                        emoji: '🚀'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Time Tracking',\\r\\n                        emoji: '⏱'\\r\\n                    }\\r\\n                ]\\r\\n            },\\r\\n            {\\r\\n                name: 'seo',\\r\\n                pages: [\\r\\n                    {\\r\\n                        name: 'Tasks',\\r\\n                        emoji: '📚'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Company Vision',\\r\\n                        emoji: '🔭'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Time Tracking',\\r\\n                        emoji: '📚'\\r\\n                    },\\r\\n                    {\\r\\n                        name: 'Customers',\\r\\n                        emoji: '⏱'\\r\\n                    }\\r\\n                ]\\r\\n            },\\r\\n        ]\\r\\n    }\\r\\n]\\r\\n\\r\\n</script>\"],\"names\":[],\"mappings\":\"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\"}"
};

const Sidebar = create_ssr_component(($$result, $$props, $$bindings, slots) => {

	let buttons = [
		{ text: "Pings", icon: At },
		{ text: "Meet", icon: Video },
		{ text: "Search", icon: Magnify },
		{ text: "Settings", icon: Settings },
		{ text: "Activity", icon: Pulse },
		{ text: "Calendar", icon: Calendar }
	];

	let organisations = [
		{
			name: "Insane Marketing",
			emoji: "🔭",
			opened: true,
			groups: [
				{
					name: "workspace",
					pages: [
						{ name: "OS", emoji: "🕹" },
						{ name: "Tasks", emoji: "📚" },
						{ name: "General Chat", emoji: "💵" },
						{ name: "Company Vision", emoji: "🚀" },
						{ name: "Time Tracking", emoji: "⏱" }
					]
				},
				{
					name: "seo",
					pages: [
						{ name: "Tasks", emoji: "📚" },
						{ name: "Company Vision", emoji: "🔭" },
						{ name: "Time Tracking", emoji: "📚" },
						{ name: "Customers", emoji: "⏱" }
					]
				}
			]
		},
		{
			name: "Vilicus Household",
			emoji: "💵",
			opened: false,
			groups: [
				{
					name: "workspace",
					pages: [
						{ name: "OS", emoji: "🕹" },
						{ name: "Tasks", emoji: "📚" },
						{ name: "General Chat", emoji: "💵" },
						{ name: "Company Vision", emoji: "🚀" },
						{ name: "Time Tracking", emoji: "⏱" }
					]
				},
				{
					name: "seo",
					pages: [
						{ name: "Tasks", emoji: "📚" },
						{ name: "Company Vision", emoji: "🔭" },
						{ name: "Time Tracking", emoji: "📚" },
						{ name: "Customers", emoji: "⏱" }
					]
				}
			]
		}
	];

	$$result.css.add(css$6);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\includes\\Sidebar.svelte");

	return `<div class="${"sidebar svelte-1r2sgux"}"><div class="${"buttons svelte-1r2sgux"}">${each(buttons, button => `<div class="${"button svelte-1r2sgux"}"><div class="${"icon svelte-1r2sgux"}">${validate_component(button.icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}</div>
                <span class="${"svelte-1r2sgux"}">${escape(button.text)}</span>
            </div>`)}</div>
    ${each(organisations, organisation => `<div class="${"organisation svelte-1r2sgux"}"><div class="${"organisation-name-area svelte-1r2sgux"}"><span class="${"emoji svelte-1r2sgux"}">${validate_component(Emoji, "Emoji").$$render($$result, { symbol: organisation.emoji }, {}, {})}</span>
                <span class="${"name svelte-1r2sgux"}">${escape(organisation.name)}</span>
                <span class="${["dropdown svelte-1r2sgux", organisation.opened ? "opened" : ""].join(" ").trim()}">${validate_component(ChevronUp, "ChevronUp").$$render($$result, {}, {}, {})}
                </span></div>
            ${organisation.opened
	? `${each(organisation.groups, group => `<div class="${"group svelte-1r2sgux"}"><div class="${"group-name-area svelte-1r2sgux"}"><span class="${"name svelte-1r2sgux"}">${escape(group.name)}</span></div>
                        ${each(group.pages, page => `<a${add_attribute("href", page.url, 0)} class="${"page svelte-1r2sgux"}"><span class="${"emoji svelte-1r2sgux"}">${validate_component(Emoji, "Emoji").$$render($$result, { symbol: page.emoji }, {}, {})}</span>
                                <span class="${"name svelte-1r2sgux"}">${escape(page.name)}</span>
                            </a>`)}
                    </div>`)}`
	: ``}
        </div>`)}
</div>`;
});

/* app\includes\Header.svelte generated by Svelte v3.25.1 */

const css$7 = {
	code: ".header.svelte-1yhkcsx{grid-area:1/2/span 1/span 1}",
	map: "{\"version\":3,\"file\":\"Header.svelte\",\"sources\":[\"Header.svelte\"],\"sourcesContent\":[\"<div class=\\\"header\\\">\\r\\n\\r\\n</div>\\r\\n<style lang=\\\"stylus\\\">.header {\\n  grid-area: 1/2/span 1/span 1;\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AAGqB,OAAO,eAAC,CAAC,AAC5B,SAAS,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,AAC9B,CAAC\"}"
};

const Header = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	$$result.css.add(css$7);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\includes\\Header.svelte");
	return `<div class="${"header svelte-1yhkcsx"}"></div>`;
});

/* app\layouts\App.svelte generated by Svelte v3.25.1 */

const css$8 = {
	code: ".framework-app.svelte-1uv8lvy{display:grid;grid-template-columns:280px 1fr;grid-template-rows:40px 1fr;flex:1;background:#f5f7f8}.content.svelte-1uv8lvy{background:#fff;border-top-left-radius:15px}*{box-sizing:border-box}html{line-height:1.15 /* 1 */;-webkit-text-size-adjust:100% /* 2 */}body{margin:0}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box /* 1 */;height:0 /* 1 */;overflow:visible /* 2 */}pre{font-family:monospace, monospace /* 1 */;font-size:1em /* 2 */}a{background-color:transparent}abbr[title]{border-bottom:none /* 1 */;text-decoration:underline /* 2 */;text-decoration:underline dotted /* 2 */}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace /* 1 */;font-size:1em /* 2 */}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit /* 1 */;font-size:100% /* 1 */;line-height:1.15 /* 1 */;margin:0 /* 2 */}button,input{overflow:visible}button,select{text-transform:none}button,[type=\"button\"],[type=\"reset\"],[type=\"submit\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\"button\"]::-moz-focus-inner,[type=\"reset\"]::-moz-focus-inner,[type=\"submit\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\"button\"]-moz-focusring,[type=\"reset\"]-moz-focusring,[type=\"submit\"]-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box /* 1 */;color:inherit /* 2 */;display:table /* 1 */;max-width:100% /* 1 */;padding:0 /* 3 */;white-space:normal /* 1 */}progress{vertical-align:baseline}textarea{overflow:auto}[type=\"checkbox\"],[type=\"radio\"]{box-sizing:border-box /* 1 */;padding:0 /* 2 */}[type=\"number\"]::-webkit-inner-spin-button,[type=\"number\"]::-webkit-outer-spin-button{height:auto}[type=\"search\"]{-webkit-appearance:textfield /* 1 */;outline-offset:-2px /* 2 */}[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button /* 1 */;font:inherit /* 2 */}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*{font-family:'Roboto'}html,body,#app{display:flex;min-height:100%;flex:1;color:#26303b}h1,h2,h3,h4,h5,h6{font-weight:500}",
	map: "{\"version\":3,\"file\":\"App.svelte\",\"sources\":[\"App.svelte\"],\"sourcesContent\":[\"<script>\\r\\nimport Sidebar from \\\"@/includes/Sidebar.svelte\\\"\\r\\nimport Header from \\\"@/includes/Header.svelte\\\"\\r\\n</script>\\r\\n    <div class=\\\"framework-app\\\">\\r\\n        <Sidebar/>\\r\\n        <Header/>\\r\\n        <div class=\\\"content\\\">\\r\\n            <slot/>\\r\\n        </div>\\r\\n    </div>\\r\\n<style lang=\\\"stylus\\\">.framework-app {\\n  display: grid;\\n  grid-template-columns: 280px 1fr;\\n  grid-template-rows: 40px 1fr;\\n  flex: 1;\\n  background: #f5f7f8;\\n}\\n.content {\\n  background: #fff;\\n  border-top-left-radius: 15px;\\n}\\n/* normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\\n:global(*) {\\n  box-sizing: border-box;\\n}\\n:global(html) {\\n  line-height: 1.15 /* 1 */;\\n  -webkit-text-size-adjust: 100% /* 2 */;\\n}\\n:global(body) {\\n  margin: 0;\\n}\\n:global(h1) {\\n  font-size: 2em;\\n  margin: 0.67em 0;\\n}\\n:global(hr) {\\n  box-sizing: content-box /* 1 */;\\n  height: 0 /* 1 */;\\n  overflow: visible /* 2 */;\\n}\\n:global(pre) {\\n  font-family: monospace, monospace /* 1 */;\\n  font-size: 1em /* 2 */;\\n}\\n:global(a) {\\n  background-color: transparent;\\n}\\n:global(abbr[title]) {\\n  border-bottom: none /* 1 */;\\n  text-decoration: underline /* 2 */;\\n  text-decoration: underline dotted /* 2 */;\\n}\\n:global(b),\\n:global(strong) {\\n  font-weight: bolder;\\n}\\n:global(code),\\n:global(kbd),\\n:global(samp) {\\n  font-family: monospace, monospace /* 1 */;\\n  font-size: 1em /* 2 */;\\n}\\n:global(small) {\\n  font-size: 80%;\\n}\\n:global(sub),\\n:global(sup) {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n:global(sub) {\\n  bottom: -0.25em;\\n}\\n:global(sup) {\\n  top: -0.5em;\\n}\\n:global(img) {\\n  border-style: none;\\n}\\n:global(button),\\n:global(input),\\n:global(optgroup),\\n:global(select),\\n:global(textarea) {\\n  font-family: inherit /* 1 */;\\n  font-size: 100% /* 1 */;\\n  line-height: 1.15 /* 1 */;\\n  margin: 0 /* 2 */;\\n}\\n:global(button),\\n:global(input) {\\n  overflow: visible;\\n}\\n:global(button),\\n:global(select) {\\n  text-transform: none;\\n}\\n:global(button),\\n:global([type=\\\"button\\\"]),\\n:global([type=\\\"reset\\\"]),\\n:global([type=\\\"submit\\\"]) {\\n  -webkit-appearance: button;\\n}\\n:global(button::-moz-focus-inner),\\n:global([type=\\\"button\\\"]::-moz-focus-inner),\\n:global([type=\\\"reset\\\"]::-moz-focus-inner),\\n:global([type=\\\"submit\\\"]::-moz-focus-inner) {\\n  border-style: none;\\n  padding: 0;\\n}\\n:global(button:-moz-focusring),\\n:global([type=\\\"button\\\"]-moz-focusring),\\n:global([type=\\\"reset\\\"]-moz-focusring),\\n:global([type=\\\"submit\\\"]-moz-focusring) {\\n  outline: 1px dotted ButtonText;\\n}\\n:global(fieldset) {\\n  padding: 0.35em 0.75em 0.625em;\\n}\\n:global(legend) {\\n  box-sizing: border-box /* 1 */;\\n  color: inherit /* 2 */;\\n  display: table /* 1 */;\\n  max-width: 100% /* 1 */;\\n  padding: 0 /* 3 */;\\n  white-space: normal /* 1 */;\\n}\\n:global(progress) {\\n  vertical-align: baseline;\\n}\\n:global(textarea) {\\n  overflow: auto;\\n}\\n:global([type=\\\"checkbox\\\"]),\\n:global([type=\\\"radio\\\"]) {\\n  box-sizing: border-box /* 1 */;\\n  padding: 0 /* 2 */;\\n}\\n:global([type=\\\"number\\\"]::-webkit-inner-spin-button),\\n:global([type=\\\"number\\\"]::-webkit-outer-spin-button) {\\n  height: auto;\\n}\\n:global([type=\\\"search\\\"]) {\\n  -webkit-appearance: textfield /* 1 */;\\n  outline-offset: -2px /* 2 */;\\n}\\n:global([type=\\\"search\\\"]::-webkit-search-decoration) {\\n  -webkit-appearance: none;\\n}\\n:global(::-webkit-file-upload-button) {\\n  -webkit-appearance: button /* 1 */;\\n  font: inherit /* 2 */;\\n}\\n:global(details) {\\n  display: block;\\n}\\n:global(summary) {\\n  display: list-item;\\n}\\n:global(template) {\\n  display: none;\\n}\\n:global([hidden]) {\\n  display: none;\\n}\\n:global(*) {\\n  font-family: 'Roboto';\\n}\\n:global(html),\\n:global(body),\\n:global(#app) {\\n  display: flex;\\n  min-height: 100%;\\n  flex: 1;\\n  color: #26303b;\\n}\\n:global(h1),\\n:global(h2),\\n:global(h3),\\n:global(h4),\\n:global(h5),\\n:global(h6) {\\n  font-weight: 500;\\n}\\n</style>\\r\\n<svelte:head>\\r\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\\\" rel=\\\"stylesheet\\\" defer>\\r\\n</svelte:head>\"],\"names\":[],\"mappings\":\"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\"}"
};

const App = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	$$result.css.add(css$8);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\layouts\\App.svelte");

	return `<div class="${"framework-app svelte-1uv8lvy"}">${validate_component(Sidebar, "Sidebar").$$render($$result, {}, {}, {})}
        ${validate_component(Header, "Header").$$render($$result, {}, {}, {})}
        <div class="${"content svelte-1uv8lvy"}">${slots.default ? slots.default({}) : ``}</div></div>

${($$result.head += `<link href="${"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap"}" rel="${"stylesheet"}" defer>`, "")}`;
});

/* app\pages\Export.svelte generated by Svelte v3.25.1 */

const css$9 = {
	code: ".page-content.svelte-1j09gre{padding:40px}",
	map: "{\"version\":3,\"file\":\"Export.svelte\",\"sources\":[\"Export.svelte\"],\"sourcesContent\":[\"<script>\\r\\nimport Kanban from '@/components/kanban/Kanban'\\r\\nimport App from '@/layouts/App'\\r\\n\\r\\nlet property = 'status'\\r\\nlet properties = {\\r\\n\\t'status': {\\r\\n\\t\\t'To Do': { color: \\\"#e8e8e8\\\" },\\r\\n\\t\\t'Stuck': { color: \\\"#fcc\\\" },\\r\\n\\t\\t'In Progress': { color: \\\"#def\\\" },\\r\\n\\t\\t'Done': { color: '#ced' }\\r\\n\\t},\\r\\n\\t'Story': {\\r\\n\\t\\t'User Story 1': {},\\r\\n\\t\\t'User Story 2': {}\\r\\n\\t}\\r\\n}\\r\\nlet swimlane = 'story'\\r\\n\\r\\nlet items = [\\r\\n\\t{ id: 0, status: 'To Do', name: \\\"Task 1\\\", story: 'User Story 1'},\\r\\n\\t{ id: 1, status: 'Stuck', name: \\\"Task 2\\\", story: 'User Story 2'}\\r\\n]\\r\\n</script>\\r\\n<App>\\r\\n\\t<div class=\\\"page-content\\\">\\r\\n\\t\\t<Kanban\\r\\n\\t\\tbind:groups={properties[property]}\\r\\n\\t\\tbind:items={items}\\r\\n\\t\\tbind:swimlane={swimlane}\\r\\n\\t\\t/>\\r\\n\\t</div>\\r\\n</App>\\r\\n<style lang=\\\"stylus\\\">.page-content {\\n  padding: 40px;\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AAiCqB,aAAa,eAAC,CAAC,AAClC,OAAO,CAAE,IAAI,AACf,CAAC\"}"
};

let property = "status";

const Export = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let properties = {
		"status": {
			"To Do": { color: "#e8e8e8" },
			"Stuck": { color: "#fcc" },
			"In Progress": { color: "#def" },
			"Done": { color: "#ced" }
		},
		"Story": { "User Story 1": {}, "User Story 2": {} }
	};

	let swimlane = "story";

	let items = [
		{
			id: 0,
			status: "To Do",
			name: "Task 1",
			story: "User Story 1"
		},
		{
			id: 1,
			status: "Stuck",
			name: "Task 2",
			story: "User Story 2"
		}
	];

	$$result.css.add(css$9);
	$$result.renderedComponents.add("C:\\Users\\Albert\\Desktop\\repos\\gsm\\frontend\\app\\pages\\Export.svelte");
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$$rendered = `${validate_component(App, "App").$$render($$result, {}, {}, {
			default: () => `<div class="${"page-content svelte-1j09gre"}">${validate_component(Kanban, "Kanban").$$render(
				$$result,
				{
					groups: properties[property],
					items,
					swimlane
				},
				{
					groups: $$value => {
						properties[property] = $$value;
						$$settled = false;
					},
					items: $$value => {
						items = $$value;
						$$settled = false;
					},
					swimlane: $$value => {
						swimlane = $$value;
						$$settled = false;
					}
				},
				{}
			)}</div>
`
		})}`;
	} while (!$$settled);

	return $$rendered;
});

export default Export;
